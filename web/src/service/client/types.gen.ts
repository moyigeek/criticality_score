// This file is auto-generated by @hey-api/openapi-ts

export type ControllerUpdateGitLinkRequest = {
    linkConfidence: string;
    newGitLink: string;
    packageName: string;
    tableName: string;
};

export type ModelPageDtoModelRankingResultDto = {
    count?: number;
    items?: Array<ModelRankingResultDto>;
    start?: number;
    total?: number;
};

export type ModelPageDtoModelResultDto = {
    count?: number;
    items?: Array<ModelResultDto>;
    start?: number;
    total?: number;
};

export type ModelRankingResultDto = {
    distDetail?: Array<ModelResultDistDetailDto>;
    distroScore?: number;
    gitDetail?: Array<ModelResultGitMetadataDto>;
    gitScore?: number;
    langDetail?: Array<ModelResultLangDetailDto>;
    langScore?: number;
    link?: string;
    ranking?: number;
    score?: number;
    scoreID?: number;
    updateTime?: string;
};

export type ModelResultDto = {
    distDetail?: Array<ModelResultDistDetailDto>;
    distroScore?: number;
    gitDetail?: Array<ModelResultGitMetadataDto>;
    gitScore?: number;
    langDetail?: Array<ModelResultLangDetailDto>;
    langScore?: number;
    link?: string;
    score?: number;
    scoreID?: number;
    updateTime?: string;
};

export type ModelResultDistDetailDto = {
    count?: number;
    impact?: number;
    pageRank?: number;
    type?: number;
    updateTime?: string;
};

export type ModelResultGitMetadataDto = {
    commitFrequency?: number;
    contributorCount?: number;
    createdSince?: string;
    language?: Array<string>;
    license?: Array<string>;
    orgCount?: number;
    updateTime?: string;
    updatedSince?: string;
};

export type ModelResultLangDetailDto = {
    depCount?: number;
    langEcoImpact?: number;
    type?: number;
    updateTime?: string;
};

export type GetHistoriesData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Git link
         */
        link: string;
        /**
         * Skip count
         */
        start?: number;
        /**
         * Take count
         */
        take?: number;
    };
    url: '/histories';
};

export type GetHistoriesResponses = {
    /**
     * OK
     */
    200: ModelPageDtoModelResultDto;
};

export type GetHistoriesResponse = GetHistoriesResponses[keyof GetHistoriesResponses];

export type GetQueryWithPaginationData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Table Name
         */
        tableName: string;
        /**
         * Page Size
         */
        pageSize: number;
        /**
         * Offset
         */
        offset: number;
    };
    url: '/query-with-pagination';
};

export type GetQueryWithPaginationResponses = {
    /**
     * OK
     */
    200: {
        [key: string]: unknown;
    };
};

export type GetQueryWithPaginationResponse = GetQueryWithPaginationResponses[keyof GetQueryWithPaginationResponses];

export type GetRankingsData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Skip count
         */
        start?: number;
        /**
         * Take count
         */
        take?: number;
        /**
         * Include details
         */
        detail?: boolean;
    };
    url: '/rankings';
};

export type GetRankingsResponses = {
    /**
     * OK
     */
    200: ModelPageDtoModelRankingResultDto;
};

export type GetRankingsResponse = GetRankingsResponses[keyof GetRankingsResponses];

export type GetResultsData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Search query
         */
        q: string;
        /**
         * Skip count
         */
        start?: number;
        /**
         * Take count
         */
        take?: number;
    };
    url: '/results';
};

export type GetResultsResponses = {
    /**
     * OK
     */
    200: ModelPageDtoModelResultDto;
};

export type GetResultsResponse = GetResultsResponses[keyof GetResultsResponses];

export type GetResultsByScoreidData = {
    body?: never;
    path: {
        /**
         * Score ID
         */
        scoreid: number;
    };
    query?: never;
    url: '/results/{scoreid}';
};

export type GetResultsByScoreidResponses = {
    /**
     * OK
     */
    200: ModelResultDto;
};

export type GetResultsByScoreidResponse = GetResultsByScoreidResponses[keyof GetResultsByScoreidResponses];

export type GetSearchPackagesData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Table Name
         */
        tableName: string;
        /**
         * Search Query
         */
        searchQuery: string;
        /**
         * Page Size
         */
        pageSize: number;
        /**
         * Offset
         */
        offset?: number;
    };
    url: '/search-packages';
};

export type GetSearchPackagesResponses = {
    /**
     * OK
     */
    200: {
        [key: string]: unknown;
    };
};

export type GetSearchPackagesResponse = GetSearchPackagesResponses[keyof GetSearchPackagesResponses];

export type PostUpdateGitlinkData = {
    /**
     * Update Git Link Request
     */
    body: ControllerUpdateGitLinkRequest;
    path?: never;
    query?: never;
    url: '/update-gitlink';
};

export type PostUpdateGitlinkResponses = {
    /**
     * OK
     */
    200: {
        [key: string]: string;
    };
};

export type PostUpdateGitlinkResponse = PostUpdateGitlinkResponses[keyof PostUpdateGitlinkResponses];

export type ClientOptions = {
    baseUrl: `${string}://src/api/v1` | (string & {});
};